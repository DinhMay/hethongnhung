#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include <DHT.h>
#include <Wire.h>

#define sensor D4

#define motor D6
#define in4 D7
#define in3 D8
#define DHTPIN D5
#define DHTTYPE DHT11

DHT dht(DHTPIN, DHTTYPE);

int mysensor;
int sensorStatus;

const char *ssid = "Galaxy A235A0C";
const char *password = "12345678";

ESP8266WebServer server(80);

void handleRoot() {
  mysensor= digitalRead( sensor);

  float humidity = dht.readHumidity();
  float temperature = dht.readTemperature();

  String html = "<html style='font-family: Arial, Helvetica, sans-serif; margin: 0px auto; text-align: center;'>";
  html += "<head><title> WEBSERVER </title>";
  html += "<script>";
  html += "function updatePage() {";
  html += "  location.reload();";
  html += "}";
  html += "setTimeout(updatePage, 10000);";  // Cập nhật trang mỗi 15 giây
  html += "</script>";
  html += "</head>";
  html += "<body style='margin-top: 50px;'>";

  // Thêm container
  html += "<div style='background-color: darkred; width: 400px; border-radius: 10px; margin: auto; padding: 10px;'>";

  html += "<H1 style='color: white; margin: 30px 30px;'> ESP8266 WEBSERVER </H1>";
  html += "<H2 style='color: white; margin-bottom: 30px;'> Nhom hoc phan IOT </H2>";
  html += "<H3 style='color: white; margin-bottom: 50px;> He thong dieu khien quat tu dong </H3>";
  html += "<B style='font-size: 20px; color: black; margin-bottom: 10px;'> Temperature: ";
  html += temperature;
  html += " *C</B><br>";
  html += "<B style='font-size: 20px; color: black; margin-bottom: 10px;'> Humidity: ";
  html += humidity;
  html += " %</B><br>";
  html += "<B style='font-size: 20px; color: black; margin-bottom: 10px;'> sensorStatus: ";
  html += sensorStatus;
  html += "</B><br><br>";
  html += "<button type='button' style='width: 70px; border: none; color: #191970; padding: 10px 20px; text-decoration: none; font-size: 15px; margin: 0px auto 35px; cursor: pointer; border-radius: 4px; margin-right: 10px;' onclick='motorControl(\"mode1\")'> mode-1 </button>";
  html += "<button type='button' style='width: 70px; border: none; color: #191970; padding: 10px 20px; text-decoration: none; font-size: 15px; margin: 0px auto 35px; cursor: pointer; border-radius: 4px; margin-right: 10px;' onclick='motorControl(\"mode2\")'> mode-2 </button>";
  html += "<button type='button' style='width: 70px; border: none; color: #191970; padding: 10px 20px; text-decoration: none; font-size: 15px; margin: 0px auto 35px; cursor: pointer; border-radius: 4px;' onclick='motorControl(\"off\")'> motor off </button>";

  // Đóng container
  html += "</div>";
  
  html += "<script>";
  html += "function motorControl(command) {";
  html += "  var xhttp = new XMLHttpRequest();";
  html += "  xhttp.open('GET', '/motor?command=' + command, true);";
  html += "  xhttp.send();";
  html += "}";
  html += "</script>";
  
  html += "</body>";
  html += "</html>";

  server.send(200, "text/html", html);
}

void motorControl() {
  String command = server.arg("command");
  if (command == "mode1") {
    // Bật động cơ với tốc độ 150 (có thể thay đổi)
    analogWrite(motor, 130);
  } else if (command == "mode2") {
    // Tắt động cơ
    analogWrite(motor, 170);
  }
  else if (command == "off") {
    // Tắt động cơ
    analogWrite(motor, 0);
  }
  server.send(200, "text/plain", "OK");
}

void setup() {
  Serial.begin( 9600);
  dht.begin();

  Serial.println();
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");

  // Cấu hình chân PWM cho động cơ
  pinMode(motor, OUTPUT);
  pinMode( in3, OUTPUT);
  pinMode( in4, OUTPUT);
  digitalWrite( in3, LOW);
  digitalWrite( in4, HIGH);
  analogWriteRange(255); // Đặt phạm vi PWM từ 0 đến 255
  analogWriteFreq(1000); // Đặt tần số PWM (1 kHz)

  server.on("/", HTTP_GET, handleRoot);
  server.on("/motor", HTTP_GET, motorControl);

  server.begin();
  Serial.println("Server started");
  Serial.print("Use this URL to connect: ");
  Serial.print("http://");
  Serial.print(WiFi.localIP());
  Serial.println("/");
}

void autoMotor() {

  mysensor= digitalRead( sensor);

  float humidity = dht.readHumidity();
  float temperature = dht.readTemperature();
  Serial.println("");
  Serial.print("Nhiệt độ: ");
  Serial.print( temperature);
  Serial.println(" *C");
  Serial.print("Độ ẩm: ");
  Serial.print( humidity);
  Serial.println(" %");

  // Cập nhật giá trị sensorStatus
  sensorStatus = mysensor;

  if( mysensor== 0) {
    Serial.println( "mySensor: true");

    if( round( temperature) > 15 and temperature < 30) {
      analogWrite( motor, 130);
      Serial.println("Che do motor: 1");
    }
    else if( temperature > 30) {
      analogWrite( motor, 170);
      Serial.println("Che do motor: 2");
    }
    else if( temperature < 15) {
      analogWrite( motor, 0);
      Serial.println("Che do motor: tat");
    }
  }
  else {
    Serial.println( "mySensor: false");
  }
  delay( 3000);
}

void loop() {
  autoMotor();
  server.handleClient();
}